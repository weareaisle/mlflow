name: "setup-python"
description: "Ensures to install a python version that's available on Anaconda"
inputs:
  python-version:
    description: "The python version to install. If unspecified, install the minimum python version mlflow supports."
    required: false
outputs:
  python-version:
    description: "The installed python version"
    value: ${{ steps.get-python-version.outputs.version }}
runs:
  using: "composite"
  steps:
    - name: get-python-version
      id: get-python-version
      shell: bash
      # We used to use `conda search python=3.x` to dynamically fetch the latest available version
      # in 3.x on Anaconda, but it turned out `conda search` is very slow (takes 40 ~ 50 seconds).
      # This overhead sums up to a significant amount of delay in the cross version tests
      # where we trigger more than 100 GitHub Actions runs.
      run: |
        python_version="${{ inputs.python-version }}"
        if [ -z "$python_version" ]; then
          python_version=$(python setup.py -q min_python_version)
        fi
        if [[ "$python_version" == "3.8" ]]; then
          if [ ${{ runner.os }} == "Windows" ]; then
            # GitHub Actions does not have a Python 3.8.12 binary for Windows as of Oct. 27 2022
            python_version="3.8.10"
          else
            python_version="3.8.12"
          fi
        elif [[ "$python_version" == "3.9" ]]; then
          python_version="3.9.13"
        else
          echo "Invalid python version: '$python_version'. Must be '3.8'"
          exit 1
        fi
        echo "version=$python_version" >> $GITHUB_OUTPUT
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ steps.get-python-version.outputs.version }}
